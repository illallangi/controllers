#!/usr/local/bin/hook
---
kinds:
- apiVersion: illallangi.enterprises/v1alpha1
  kind: AIS
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata: {{ _instance.metadata }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ _instance.selector }}
  strategy:
    type: "Recreate"
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: shipxplorer
      labels: {{ _instance.selector }}
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: "{{ _instance.metadata.name }}"
        image: "ghcr.io/sdr-enthusiasts/shipxplorer:latest"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          tcpSocket:
            port: "http"
        name: "shipxplorer"
        ports:
        - containerPort: 80
          name: http
        resources: {}
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 30
          tcpSocket:
            port: http
        volumeMounts:
        - mountPath: /opt/ais/shipxplorer/data
          name: persistence
          subPath: "opt/ais/shipxplorer/data"
        - mountPath: "/dev/bus/usb"
          name: "usb"
        - mountPath: "/tmp"
          name: "scratch"
          subPath: "tmp"
      nodeSelector:
        rtlsdr-16200: "true"
      serviceAccount: "{{ _instance.metadata.name }}"
      serviceAccountName: "{{ _instance.metadata.name }}"
      volumes:
      - hostPath:
          path: "/dev/bus/usb"
          type: "Directory"
        name: "usb"
      - emptyDir: {}
        name: "scratch"
      - emptyDir: {}
        # persistentVolumeClaim:
        #   claimName: "{{ _instance.metadata.name }}"
        name: "persistence"