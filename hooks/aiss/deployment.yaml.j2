#!/usr/local/bin/hook
---
kinds:
- apiVersion: illallangi.enterprises/v1alpha1
  kind: AIS
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata: {{ _instance.metadata }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ _instance.selector }}
  strategy:
    type: "Recreate"
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: shipxplorer
      labels: {{ _instance.selector }}
    spec:
      containers:
      - env:
        - name: VERBOSE_LOGGING
          value: ""
        - name: SHARING_KEY
          valueFrom: {{ _component.spec.ais.shipXplorer.sharingKey }}
        - name: SERIAL_NUMBER
          valueFrom: {{ _component.spec.ais.shipXplorer.serialNumber }}
        - name: RTLSDR_DEVICE_SERIAL
          value: "16200"
        - name: UDP_FEEDS
          valueFrom:
            configMapKeyRef:
              key: udpFeeds
              name: "{{ _instance.metadata.name }}"
        - name: RTLSDR_DEVICE_GAIN
          value: auto
        - name: AISCATCHER_EXTRA_OPTIONS
          value: -p 0 -a 192K -m 4 -go AFC_WIDE on
        - name: STATION_NAME
          valueFrom:
            configMapKeyRef:
              key: title
              name: "{{ _instance.metadata.name }}"
        - name: STATION_HISTORY
          value: "3600"
        - name: BACKUP_INTERVAL
          value: "5"
        - name: SXFEEDER_LON
          valueFrom:
            configMapKeyRef:
              key: longitude
              name: "{{ _instance.metadata.name }}"
        - name: SXFEEDER_LAT
          valueFrom:
            configMapKeyRef:
              key: latitude
              name: "{{ _instance.metadata.name }}"
        - name: PROMETHEUS_ENABLE
          value: "false"
        image: "ghcr.io/sdr-enthusiasts/shipxplorer:latest"
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          tcpSocket:
            port: "http"
        name: "shipxplorer"
        ports:
        - containerPort: 80
          name: http
        resources: {}
        securityContext:
          privileged: true
        startupProbe:
          failureThreshold: 30
          tcpSocket:
            port: http
        volumeMounts:
        - mountPath: /data
          name: persistence
          subPath: "data"
        - mountPath: "/dev/bus/usb"
          name: "usb"
        - mountPath: /etc/localtime
          name: localtime
        - mountPath: /etc/timezone
          name: timezone
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      nodeSelector:
        rtlsdr-16200: "true"
      serviceAccount: "{{ _instance.metadata.name }}"
      serviceAccountName: "{{ _instance.metadata.name }}"
      volumes:
      - hostPath:
          path: "/dev/bus/usb"
          type: "Directory"
        name: "usb"
      - hostPath:
          path: /etc/localtime
          type: File
        name: localtime
      - hostPath:
          path: /etc/timezone
          type: File
        name: timezone
      - persistentVolumeClaim:
          claimName: "{{ _instance.metadata.name }}"
        name: "persistence"
