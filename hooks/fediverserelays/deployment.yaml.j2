#!/usr/local/bin/hook
---
kinds:
- apiVersion: illallangi.enterprises/v1alpha1
  kind: FediverseRelay
---
apiVersion: apps/v1
kind: Deployment
metadata: {{ _instance.metadata }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ _instance.selector }}
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: relay
      labels: {{ _instance.selector }}
    spec:
      containers:
      - command:
        - relay
        - --config
        - /var/lib/relay/config.yml
        - server
        - --verbose
        image: docker.io/yukimochi/activity-relay:v2.0.4
        imagePullPolicy: IfNotPresent
        name: relay
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/relay
          name: persistence
          subPath: var/lib/relay
      - command:
        - relay
        - --config
        - /var/lib/relay/config.yml
        - worker
        - --verbose
        image: docker.io/yukimochi/activity-relay:v2.0.4
        imagePullPolicy: IfNotPresent
        name: worker
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/relay
          name: persistence
          subPath: var/lib/relay
      - env:
        - name: TS_KUBE_SECRET
          value: {{ _instance.metadata.name }}-tailscale
        - name: TS_EXTRA_ARGS
          value: --hostname={{ _instance.spec.tailscale.hostname }}
        - name: TS_AUTH_KEY
          valueFrom: {{ _instance.spec.tailscale.apiToken }}
        image: ghcr.io/tailscale/tailscale:v1.48.1
        imagePullPolicy: IfNotPresent
        name: tailscale
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: persistence
          subPath: var/run/tailscale
      - image: docker.io/library/caddy:2.7.4
        imagePullPolicy: IfNotPresent
        name: caddy
        resources: {}
        volumeMounts:
        - mountPath: /etc/caddy/Caddyfile
          name: persistence
          subPath: etc/caddy/Caddyfile
        - mountPath: /var/run/tailscale
          name: persistence
          subPath: var/run/tailscale
      initContainers:
      - args:
        - --extension=jinja2_ansible_filters.AnsibleCoreFiltersExtension
        - --extension=jinja2_getenv_extension.GetenvExtension
        - --strict
        - --outfile=/output/Caddyfile
        - /input/Caddyfile.j2
        env:
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: hostname
              name: {{ _instance.metadata.name }}-redis
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              key: port
              name: {{ _instance.metadata.name }}-redis
        - name: RELAY_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: domain
              name: {{ _instance.metadata.name }}
        - name: RELAY_TITLE
          valueFrom:
            configMapKeyRef:
              key: domain
              name: {{ _instance.metadata.name }}
        image: ghcr.io/illallangi/init-jinja:v0.0.2
        imagePullPolicy: IfNotPresent
        name: init-jinja-caddyfile
        resources: {}
        volumeMounts:
        - mountPath: /output
          name: persistence
          subPath: etc/caddy
        - mountPath: /input/Caddyfile.j2
          name: {{ _component.metadata.name }}
          subPath: Caddyfile.j2
      - args:
        - --extension=jinja2_ansible_filters.AnsibleCoreFiltersExtension
        - --extension=jinja2_getenv_extension.GetenvExtension
        - --strict
        - --outfile=/output/config.yml
        - /input/config.yml.j2
        env:
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              key: hostname
              name: {{ _instance.metadata.name }}-redis
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              key: port
              name: {{ _instance.metadata.name }}-redis
        - name: RELAY_DOMAIN
          valueFrom:
            configMapKeyRef:
              key: domain
              name: {{ _instance.metadata.name }}
        - name: RELAY_TITLE
          valueFrom:
            configMapKeyRef:
              key: domain
              name: {{ _instance.metadata.name }}
        image: ghcr.io/illallangi/init-jinja:v0.0.2
        imagePullPolicy: IfNotPresent
        name: init-jinja-config-yml
        resources: {}
        volumeMounts:
        - mountPath: /output
          name: persistence
          subPath: var/lib/relay
        - mountPath: /input/config.yml.j2
          name: {{ _component.metadata.name }}
          subPath: config.yml.j2
      - args:
        - -c
        - openssl genrsa -out /var/lib/relay/actor.pem
        - chmod 0600 /var/lib/relay/actor.pem
        command:
        - /bin/bash
        image: ghcr.io/illallangi/toolbx:latest
        imagePullPolicy: IfNotPresent
        name: init-genrsa
        volumeMounts:
        - mountPath: /var/lib/relay
          name: persistence
          subPath: var/lib/relay
      - args:
        - service
        - {{ _instance.metadata.name }}-redis
        - --namespace {{ _instance.metadata.namespace }}
        image: ghcr.io/groundnuty/k8s-wait-for:v2.0
        imagePullPolicy: IfNotPresent
        name: init-redis
        resources: {}
      serviceAccount: {{ _instance.metadata.name }}
      serviceAccountName: {{ _instance.metadata.name }}
      volumes:
      - configMap:
          name: {{ _component.metadata.name }}
        name: {{ _component.metadata.name }}
      - persistentVolumeClaim:
          claimName: {{ _instance.metadata.name }}
        name: persistence