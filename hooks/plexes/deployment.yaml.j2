#!/usr/local/bin/hook
---
kinds:
- apiVersion: illallangi.enterprises/v1alpha1
  kind: Plex
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata: {{ _instance.metadata }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ _instance.selector }}
  strategy:
    type: "Recreate"
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: plex
      labels: {{ _instance.selector }}
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: "{{ _instance.metadata.name }}"
        image: {{ 'IMAGE_PLEX' | getenv }}
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          httpGet:
            port: http
        name: plex
        ports:
        - containerPort: 80
          name: http
        resources: {}
        startupProbe:
          httpGet:
            port: http
          failureThreshold: 30
        volumeMounts:
        - mountPath: "/config"
          name: "persistence"
          subPath: "config"
{%- for data in _component.spec.plex.data %}
        - mountPath: "/data/{{ data.name }}"
          name: "persistence"
          readOnly: true
          subPath: "{{ data.subPath}}"
{%- endfor %}
{% if _component.spec.pigallery is defined
   and _component.spec.pigallery.backup is defined %}
      - env:
          - name: "RUN_ON_STARTUP"
            value: "true"
          - name: "BACKUP_CRON"
            value: "{{ _component.spec.pigallery.backup.schedule }}"
          - name: "RESTIC_BACKUP_SOURCES"
            value: /config
          - name: "RESTIC_BACKUP_ARGS"
            value: --verbose --host {{ _component.metadata.name }}.{{ _component.metadata.namespace }}.svc.cluster.local --tag plex
          - name: "RESTIC_FORGET_ARGS"
            value: --keep-last 10 --keep-daily 7 --keep-weekly 5 --keep-monthly 12
          - name: "RESTIC_REPOSITORY"
            value: "{{ _component.spec.pigallery.backup.b2repo }}:/{{ _component.metadata.namespace }}/{{ _component.metadata.name }}"
          - name: "TZ"
            value: "Australia/Melbourne"
          - name: "RESTIC_PASSWORD"
            valueFrom: {{ _component.spec.pigallery.backup.resticPassword }}
          - name: "B2_ACCOUNT_ID"
            valueFrom: {{ _component.spec.pigallery.backup.b2AccountId }}
          - name: "B2_ACCOUNT_KEY"
            valueFrom: {{ _component.spec.pigallery.backup.b2AccountKey }}
        image: {{ 'IMAGE_RESTIC' | getenv }}
        imagePullPolicy: IfNotPresent
        name: backup
        volumeMounts:
        - mountPath: "/config"
          name: "persistence"
          subPath: "config"
{% endif %}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      hostNetwork: true
      serviceAccount: "{{ _instance.metadata.name }}"
      serviceAccountName: "{{ _instance.metadata.name }}"
      volumes:
      - persistentVolumeClaim:
          claimName: "{{ _instance.metadata.name }}"
        name: "persistence"
{% for data in _component.spec.plex.data %}
      - persistentVolumeClaim:
          claimName: "{{ data.name }}"
        name: "{{ data.name }}"
{% endfor %}
