#!/usr/local/bin/hook
---
kinds:
- apiVersion: illallangi.enterprises/v1alpha1
  kind: WebTrees
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata: {{ _instance.metadata }}
spec:
  replicas: 1
  selector:
    matchLabels: {{ _instance.selector }}
  strategy:
    type: "Recreate"
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: webtrees
      labels: {{ _instance.selector }}
    spec:
      containers:
      - env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              key: hostname
              name: "{{ _instance.metadata.name }}-mariadb"
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              key: username
              name: "{{ _instance.metadata.name }}-mariadb"
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              key: database
              name: "{{ _instance.metadata.name }}-mariadb"
        - name: DB_PASS
          valueFrom: {{ _instance.spec.mariadb.password }}
        envFrom:
        - configMapRef:
            name: "{{ _instance.metadata.name }}"
        image: {{ 'IMAGE_WEBTREES' | getenv }}
        imagePullPolicy: "IfNotPresent"
        livenessProbe:
          httpGet:
            path: "/"
            port: http
        name: "webtrees"
        ports:
        - containerPort: 80
          name: http
        resources: {}
        startupProbe:
          httpGet:
            path: "/"
            port: http
          failureThreshold: 30
        volumeMounts:
        - mountPath: "/var/www/webtrees/data"
          name: "persistence"
          subPath: "var/www/webtrees/data"
        - mountPath: "/var/www/webtrees/media"
          name: "persistence"
          subPath: "var/www/webtrees/media"
{% if _component.spec.webtrees is defined
   and _component.spec.webtrees.backup is defined %}
      - env:
          - name: PRE_COMMANDS
            value: restic unlock --remove-all
          - name: "RUN_ON_STARTUP"
            value: "true"
          - name: "BACKUP_CRON"
            value: "{{ _component.spec.webtrees.backup.schedule }}"
          - name: "RESTIC_BACKUP_SOURCES"
            value: /var/www/webtrees
          - name: "RESTIC_BACKUP_ARGS"
            value: --verbose --host {{ _component.metadata.name }}.{{ _component.metadata.namespace }}.svc.cluster.local --tag webtrees
          - name: "RESTIC_FORGET_ARGS"
            value: --keep-last 10 --keep-daily 7 --keep-weekly 5 --keep-monthly 12
          - name: "RESTIC_REPOSITORY"
            value: "{{ _component.spec.webtrees.backup.b2repo }}:/{{ _component.metadata.namespace }}/{{ _component.metadata.name }}"
          - name: "TZ"
            value: "Australia/Melbourne"
          - name: "RESTIC_PASSWORD"
            valueFrom: {{ _component.spec.webtrees.backup.resticPassword }}
          - name: "B2_ACCOUNT_ID"
            valueFrom: {{ _component.spec.webtrees.backup.b2AccountId }}
          - name: "B2_ACCOUNT_KEY"
            valueFrom: {{ _component.spec.webtrees.backup.b2AccountKey }}
        image: {{ 'IMAGE_RESTIC' | getenv }}
        imagePullPolicy: IfNotPresent
        name: backup
        volumeMounts:
        - mountPath: "/var/www/webtrees"
          name: "persistence"
          subPath: "var/www/webtrees"
{% endif %}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
      initContainers:
      - args:
        - "service"
        - "{{ _instance.metadata.name }}-mariadb"
        - "--namespace {{ _instance.metadata.namespace }}"
        image: {{ 'IMAGE_K8SWAITFOR' | getenv }}
        imagePullPolicy: "IfNotPresent"
        name: "init-mariadb"
        resources: {}
      serviceAccount: "{{ _instance.metadata.name }}"
      serviceAccountName: "{{ _instance.metadata.name }}"
      volumes:
      - persistentVolumeClaim:
          claimName: "{{ _instance.metadata.name }}"
        name: "persistence"
